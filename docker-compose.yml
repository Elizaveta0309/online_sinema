version: '3'

services:
  api:
    build: .
    container_name: api
    ports:
      - "8000"
    volumes:
      - ./:/opt/app

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - "9200"
    volumes:
      - data:/var/lib/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 5000M

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  etl:
    container_name: etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./etl:/etl
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - api
    restart: on-failure

  nginx:
    build: nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"

  auth:
    build: auth
    container_name: auth
    ports:
      - "5000:5000"
    volumes:
      - ./auth:/opt/app

  postgres-auth:
    image: postgres
    container_name: postgres-auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5433"
    command:
      - -p 5433
    restart: always
    volumes:
      - postgres-data-auth:/var/lib/postgresql/data

volumes:
  data:
  postgres-data:
  postgres-data-auth:
